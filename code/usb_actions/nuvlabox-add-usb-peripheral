#!/usr/bin/env bash

#
# Classifies and attaches a new USB peripheral to this NuvlaBox, in Nuvla
#

set -e

buspath=$1
devnumber=$2
nb_id=$3
nb_version=$4

if [[ -z ${buspath} ]] || [[ -z ${devnumber} ]] || [[ -z ${nb_id} ]] || [[ -z ${nb_version} ]]
then
    echo "ERR: this script needs the usb bus path, device number, NuvlaBox ID and version as inputs"
    exit 126
fi

if [[ -z ${PERIPHERALS_DIR} ]]
then
    export PERIPHERALS_DIR="${SHARED}/.peripherals"
    echo "WARN: the environment variable PERIPHERALS_DIR has not been set. Using default $PERIPHERALS_DIR."
fi

real_devnumber=$(echo ${devnumber} | sed 's/^0*//')

device="${buspath}${devnumber}"

if [[ ! -e "${device}" ]]
then
    exit 0
fi

simple_lsusb=$(lsusb -s ${devnumber})
detailed_lsusb=$(lsusb -D ${device})
tree_lsusb=$(lsusb -t)

identifier=$(echo ${simple_lsusb} | cut -d " " -f6- | awk -F' ' '{print $1}')
nuvlabox_peripheral_filename="${PERIPHERALS_DIR}/${identifier}"

vendor=$(echo "${detailed_lsusb}" | grep idVendor | awk '{ for (i=3; i<=NF; i++) printf $i" " }')
product=$(echo "${detailed_lsusb}" | grep idProduct | awk '{ for (i=3; i<=NF; i++) printf $i" " }')

classes=$(echo "${tree_lsusb}" | grep "Dev ${real_devnumber}" | awk -F'[,=]' '{print "\""$4"\","}' | sort | uniq)
classes_final=$(echo "["${classes} | sed 's/,$/]/')

interface="USB"
### TODO: this availability check should come from the system-manager
available=true
###

description="${interface} ${identifier} ${vendor} ${product}"



add_string_json() {
    # $1 is original json
    # $2 is attribute name
    # $3 is value
    echo $1 | jq --arg newarg "${3}" '. + {($2): $newarg}'
}

json=$( jq -n \
            --arg parent "${nb_id}" \
            --argjson version ${nb_version} \
            --argjson available ${available} \
            --arg interface "${interface}" \
            --argjson classes "${classes_final}" \
            --arg identifier "${identifier}" \
            '{  parent: $parent,
                version: $version,
                available: $available,
                interface: $interface,
                classes: $classes,
                identifier: $identifier}' )


if [[ ! -z ${product} ]]
then
    name="${product}"
    json=$(add_string_json "${json}" "product" "${product}")
else
    if [[ ! -z ${description} ]]
    then
        name=${description}
        json=$(add_string_json "${json}" "description" "${description}")
        json=$(add_string_json "${json}" "name" "${name}")
    fi
fi

if [[ ! -z ${vendor} ]]
then
    json=$(add_string_json "${json}" "vendor" "${vendor}")
fi

if [[ ! -z ${device} ]]
then
    json=$(add_string_json "${json}" "device" "${device}")
fi


(id=$(nuvla-client-post "nuvlabox-peripheral" "${json}") && \
    nuvla_id=$(echo "${id}" | awk -F' ' '{print $NF}') && \
    echo ${json} | jq --arg id "${nuvla_id}" '. + {id: $id}' > ${PERIPHERALS_DIR}/${identifier} && \
    echo "INFO: successfully registered peripheral ${identifier}" ) || echo "ERR: could not register new USB device ${identifier}!"
