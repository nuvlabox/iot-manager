#!/usr/bin/env bash

#
# Generic client to post a payload to Nuvla
#

set -o pipefail

resource=$1
payload=$2

if [[ ! -z ${payload} ]] || [[ "${payload}" != *} ]]
then
    (echo "${payload}" | jq -e . &>/dev/null) || { echo "ERR: the received payload is not a JSON"; exit 1; }
fi

if [[ -z ${resource} ]] || [[ -z ${payload} ]]
then
    echo "ERR: this script needs a payload and resource name as inputs"
    exit 126
fi

nuvla_endpoint=${NUVLA_ENDPOINT:-nuvla.io}
#
#if [[ "${nuvla_endpoint}" != "https://"* ]] && [[ "${nuvla_endpoint}" != "http://"* ]]
#then
#  nuvla_endpoint="https://${nuvla_endpoint}"
#fi
#
#while [[ "${nuvla_endpoint: -1}" == "/" ]]
#do
#  nuvla_endpoint=$(echo "${nuvla_endpoint:: -1}")
#done

shared_directory=${SHARED:-/srv/nuvlabox/shared}
cookies_file="${shared_directory}/cookies"

if [[ "${NUVLA_ENDPOINT_INSECURE}" == "True" ]]
then
    extra_flags="-k"
else
    extra_flags=""
fi

nuvla-client-login "${nuvla_endpoint}" "${shared_directory}" "${cookies_file}" "${extra_flags}"

# Now we can push the resource
(curl -XPOST --fail \
    ${nuvla_endpoint}/api/${resource} \
    -H content-type:application/json \
    -H accept:application/json \
    -b ${cookies_file} \
    ${extra_flags} \
    -d "${payload}" | jq -re '."resource-id"') || { echo "WARN: Cannot create resource ${payload} in Nuvla"; exit 1; }
